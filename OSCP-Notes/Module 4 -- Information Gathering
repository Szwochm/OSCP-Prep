[x] Critical Finds: https://osintframework.com/ -- Interesting mind map of how to perform OSINT with links to various tools

Note: With this Module I have introduce High Level Questions (HLQ). These point out information in the course I see that would be necessary at a management level... Things that should be known by CEOs, Contractors, Sales reps attempting to sell a product...

[x] # 6. Information Gathering
GOal: Learn how to methodically map such an attack surface using both passive and active means

## 6.1 The Pen Test Lifecycle

Information gathering has a role within every stage of a pentest

HLQ: When should pentests be done? ---------- Routinely and after large shifts to IT architecture

Stages of a pentest
  Defining the Scope
  Information Gathering
  Vulnerability Detection
  Initial Foothold
  Privilege Escalation
  Lateral Movement
  Reporting/Analysis
  Lessons Learned/Remediation

HLQ: What does the scope of a pentest define: ---------- Which IP ranges, hosts, and applications should be test subjects during the engagement, as compared to out-of-scope items that should not be tested.

When we begin information gathering we are initially looking for information on the following things
A ssets
P ersonnel
I nfrastructure

"information gathering (also known as enumeration) does not end after our initial reconnaissance."

 [x] ## 6.2 Passive Information Gathering

Learning Objectives:
Understand the two different Passive Information Gathering approaches
(OSINT)
Web Server and DNS passive information gathering

https://osintframework.com/

The ultimate goal of passive information gathering is to obtain information that clarifies or expands an attack surface
https://cheatsheetseries.owasp.org/cheatsheets/Attack_Surface_Analysis_Cheat_Sheet.html

#6.2.1

https://www.megacorpone.com/ -- one of offsecs domains for PASSIVE Information Gathering
https://www.forbes.com/advisor/business/software/what-is-a-name-server/
https://www.cloudflare.com/learning/dns/glossary/what-is-a-domain-name-registrar/

Whois lookup of a hostname 
whois megacorpone.com -h 192.168.50.251 
(192.168.60.251 is Offsecs WHOIS server... Generally speaking companies WILL NOT have their own WHOIS server This is not a name server. Name servers resolve IPS and Hostnames. WhoIS servers provide information on the registration of domains)

Whois lookup of an Ip (AKA reverse lookup)
whois 38.100.193.70 -h 192.168.50.251

Using this command, they located the IT Admin's Name, and 3 name servers (NS1.MEGACORPONE.COM)

### 6.2.2
intitle:"index of" "parent directory"

This takes you to a basically a file explorer of a page aka Directory Listing, (If it exists and you have permissions) -- CWE-548: Exposure of Information Through Directory Listing

Content-Security-Policy-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
-- helps detect and mitigate web app attacks

  browsers that do not support csp function as usual defaulting to same-origin policy

  enabled by enabling Content-Security-Policy header on webserver (previously known as x-content-security-policy)


  can also be enabled using

 LEFT BRACKET meta
  http-equiv="Content-Security-Policy"
  content="default-src 'self'; img-src https://*; child-src 'none';" / RIGHT BRACKET

## 6.3. Active Information Gathering

in some cases during a penetration test, we won't have the luxury of running our favorite Kali Linux tool

https://lolbas-project.github.io/ -- you can use lolbas for information gathering, not just exploiting

### 6.3.1 DNS Enumeration

# 6.3.1

Command: host www.megacorpone.com
Gets ip address of a hostname

Command: host -t mx megacorpone.com
-t specifies to view mx records instead of default of A record(s)\

Result:
megacorpone.com mail is handled by 10 fb.mail.gandi.net.
megacorpone.com mail is handled by 20 spool.mail.gandi.net.
megacorpone.com mail is handled by 50 mail.megacorpone.com.
megacorpone.com mail is handled by 60 mail2.megacorpone.com.

Lowest number = first to forward mail

Automating host command

Step 1. Create a list

admin
shop
login
mail


Bash oneliner
Command: for ip in $(cat list.txt); do host $ip.megacorpone.com; done
basically ip is like in python how you can iterate through a list of anything... every line is an $ip. ip is just the name of the "i" variable

https://github.com/danielmiessler/SecLists -- wordlists
sudo apt install seclists -- get said wordlists (1.9 gigs as of 8-11)

Alot to unpack for the next command
Command: for ip in $(seq 200 254); do host 51.222.169.$ip; done | grep -v "not found"

Explanation: 
for i in 200, 201 ... 254
host 51.222.169.i
Pipe to grep -v (remove results that match regex of "not found"

The big picture:
They previously used a word list to try to guess some potential hostnames. Upon finding 2-3 entries that were alive, they discovered a pattern in the IP scheme. Using that pattern they tried doing reverse looksups and seeing what came back.


Tool: DNSRecon
https://github.com/darkoperator/dnsrecon

Command: dnsrecon -d megacorpone.com -t std
-d: Specify domain
-t std: type of enumeration (STanDard

Using a list we created we can do the following...
dnsrecon -d megacorpone.com -D ~/list.txt -t brt
-D: specify input file
-t brt: Brute force

Tool: DNSEnum
Command: dnsenum megacorpone.com

Important concept: The results of the manual, dnsrecon and dnsenum provided 3 different sets of results. (Similar but different) They are trying to show that you should use multiple tools to get information, not just one.
Lolbas connecting to a provided Windows machine
Command: xfreerdp /u:student /p:lab /v:192.x.x.x

On Windows Machine
nslookup -type=TXT info.megacorptwo.com 192.168.50.151
          ^record^  ^target subdomain^   ^dns server^

Lab question notes:
host www.megacorpone.com works
host -t mx megacorpone.com works
host -t mx www.megacorpone.com Does not work....

I also learned that labs can be broken on the first start. nothing worked until I restarted vpn and lab.

### 6.3.2 TCP/UDP Port Scanning Theory

nc -nvv -w 1 -z 192.168.50.152 3388-3390
-n: No Dns lookups
-vv: Increased verbosity (-v is regular)
-w: Time out in seconds
-z Zero i/o mode, sends no data (used for scanning)

talks about the 3 way hand shake and the flags used for scanning

udp:

nc -nv -u -z -w 1 192.168.50.149 120-123

Lab notes: I noticed that with the syntax of the code above, netcat scans from highest to lowest...


### 6.3.3 Port Scanning with Nmap
The reason why we need sudo for Nmap, is because it uses "raw sockets". No raw sockets = only able to use packets that follow standards.

preparing iptables to see size of traffic generated from scans
sudo iptables -I INPUT 1 -s 192.168.50.149 -j ACCEPT
-I: insert a new rule into a given chain. What the fuck is a chain? Input and Outbound are both chains. Chains of rules? (there is also a forward chain)
-s: source ip address
-j: in this case accepts traffic. In a more general case this can probably be DENY or Accept
sudo iptables -I OUTPUT 1 -d 192.168.50.149 -j ACCEPT

sudo iptables -Z
-Z: zero packet and byte counters in all chains.

Generate traffic 
nmap 192.168.50.149

See Ip Table Statistics
sudo iptables -vn -L
-v: Verbosity
-n: numeric output
-L: List rules present in all chains

Zero out counters again
sudo iptables -Z

Bigger traffic scan
nmap -p 1-65535 192.168.50.149

Results:
72KB traffic for normal scan
4MB traffic for full port scan
1Gig traffic to scan a 254 host network

Tip: Nmap is stealthier and generates less traffic than MASSCAN and RustScan which are faster

Stealth Scan - Aka a Syn scan. Send a syn packet. Do not complete tcp handshake (not really stealthy anymore by todays standards)

-sT:TCP connect scanning = do the whole handshake. No admin = no raw sockets = forced to use regular tcp connect scans
Uses Berkeley Sockets API to create packets.

sudo nmap -sU -sS 192.168.50.149: Do both tcp and udp scan

nmap -sn 192.168.50.1-253
-sn: host discovery. Also sends tcp packet to 443 and 80. Finally sends a ping

scan and sent to txt file for later grepping
nmap -v -sn 192.168.50.1-253 -oG ping-sweep.txt
-oG: output grepable
-v: verbosity

grep out ip addresses
grep Up ping-sweep.txt | cut -d " " -f 2

nmap -sT -A --top-ports=20 192.168.50.1-253 -oG top-port-sweep.txt
-sT: connect Scan
-A: All... OS version Detection, Script scanning, traceroute
--top-ports=20: use 20 most common ports (these are in /usr/share/nmap/nmap-services)

cats out every port -- you can also use head -n 50 to cat out the fist 15ish ports
cat /usr/share/nmap/nmap-services

sudo nmap -O 192.168.50.14 --osscan-guess
-O: os versioning
-osscan-guess: Prints out the percentages for likely OS

nmap -sT -A 192.168.50.14
-sT: TCP connect scan (i,e not stealth)
-A: All (scripts, versioning os, versioning services, etc)

nmap -sV 192.168.50.14
-sV: service versioning

Nmap can be tricked by system admins that put out fake banners...

nmap --script http-headers 192.168.50.6
--script: designate a specific script or set of scripts to use

Get info on script you are running
nmap --script-help http-headers

If the internet ever goes down we can view nmap script nse contents to see how it is working

Powershell port scan (1port)
Test-NetConnection -Port 445 192.168.50.151

Powershell script to scan first 1024 ports. $_ is the nameo f the variable. 1..1024 creates a for loop.
This is using a Net.Sockets.TcpClient object 
1..1024 | % {echo ((New-Object Net.Sockets.TcpClient).Connect("192.168.50.151", $_)) "TCP port $_ is open"} 2>$null

Here is an example I made to help me understand the syntax in the future if I have to create something new
 1..1024 | % {echo $_} 2>$null

### 6.3.4 SMB Enumeration

SMB and NetBios are not the same protocol

Modern SMB can work without netbios... Netbios over TCP (NBT) is needed for backwards compatibility.

nmap -v -p 139,445 -oG smb.txt 192.168.50.1-254
cat smb.txt


sudo nbtscan -r 192.168.50.0/24
-r: originating udp port 137

list contents of nmap's smb scripts folder
ls -1 /usr/share/nmap/scripts/smb*

nmap -v -p 139,445 --script smb-os-discovery 192.168.50.152
smb-os-discovery: - nmap script that only works if smbv1 is enabled.

lists domains, resources, and computers belonging to a given host
net view \\dc01 /all
/all: needed to list administrative shares!

Created this one-liner to enum4linux a bunch of machines as lab wanted me to do this for 10 machines
for ip in $(cat smbhosts.txt); do enum4linux $ip; done

### 6.3.5

SMTP check user using netcat
nc -nv 192.168.50.8 25
VRFY root

SMTP check user using python
Get script from https://github.com/Szwochm/OSCP-Prep/blob/main/Scripts/smtpVRFY.py

python3 smtp.py root 192.168.50.8
python3 smtp.py johndoe 192.168.50.8

Use Test Connection to see if port is up
Test-NetConnection -Port 25 192.168.50.8

Install Telnet (needs admin, you can also just move a binary onto your machine)
dism /online /Enable-Feature /FeatureName:TelnetClient

Use telnet to enumerate
telnet 192.168.50.8 25
VRFY root

### 6.3.6 SNMP Enumeration

SNMP has a database called Management Information Base which is usually related to network managment
This Database has a tree structure. Leafs correspond to specific variable values that are usable by external users

Scan for SNMP
sudo nmap -sU --open -p 161 192.168.50.1-254 -oG open-snmp.txt

Script to brute force a list of ips with 3 common community strings

Create Community string dictionary
echo public > community
echo private >> community
echo manager >> community

Bash Script to brute force those community strings against a block of ips
for ip in $(seq 1 254); do echo 192.168.50.$ip; done > ips

using a tool to do it instead
onesixtyone -c community -i ips

snmpwalk -c public -v1 -t 10 192.168.50.151
-c: specify community string
-v specify SNMP version number
-t: Timout of 10 seconds

Somethings we can try to query....

1.3.6.1.2.1.25.1.6.0	System Processes
1.3.6.1.2.1.25.4.2.1.2	Running Programs
1.3.6.1.2.1.25.4.2.1.4	Processes Path
1.3.6.1.2.1.25.2.3.1.4	Storage Units
1.3.6.1.2.1.25.6.3.1.2	Software Name
1.3.6.1.4.1.77.1.2.25	User Accounts
1.3.6.1.2.1.6.13.1.3	TCP Local Ports

Example... Query user accounts 
snmpwalk -c public -v1 192.168.50.151 1.3.6.1.4.1.77.1.2.25

Query all running processes
snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.25.4.2.1.2
- look for vulnerable apps, antivirus, other leverable information

Query all installed software
snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.25.6.3.1.2
- use with running processes  to cross reference and confirm versions of services running

# 7. Vulnerability Scanning
The point of a vulnerability scanner is to establish a baseline before performing a thorough manual test

## 7.1. Vulnerability Scanning Theory

### 7.1.1. How Vulnerability Scanners Work







<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><
Extra Reading   
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>><><

7. Vulnerability Scanning

https://en.wikipedia.org/wiki/Vulnerability_scanner
No notes

https://www.tenable.com/products/nessus
no notes

https://nmap.org/
no notes

7.1.1. How Vulnerability Scanners Work

https://capec.mitre.org/data/definitions/292.html
	breaks down the various phases of a cyber attack. For this specific link it talks about host discovery.

https://nvd.nist.gov/
	Metrics, information, and other stuff about vulnerabilities. I specifically like the 20 most recently scored vulnerabilities and can use this to see what's "hot".



https://cve.mitre.org/cve/search_cve_list.html
	place to search for vulnerabilities

https://cve.mitre.org/
	no notes

https://nvd.nist.gov/vuln-metrics/cvss
	CVSS is not a measure of risk
 
https://www.first.org/cvss/v2/guide
	CVSS uses 3 metric groups
	Base - characteristics that are constant over time and user environments
	Time - characteristics that change over time
	Environmental - characteristics that are unique to a specific user environment

https://www.first.org/cvss/user-guide
	no notes
https://www.nist.gov/
	nist has publications for a variety of things, not just cyber security

https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator
 	no notes
https://www.cgisecurity.com/questions/falsepositive.shtml 
	no notes

https://access.redhat.com/security/updates/backporting
	applying security fixes of new versions to old versions
	because of back porting --  just looking at the version number of a package will not tell them if they are vulnerable or not
	 

https://www.cgisecurity.com/questions/falsenegatives.html
	no notes

6.3.6 SNMP Enumeration

https://www.ibm.com/support/knowledgecenter/ssw_aix_71/commprogramming/mib.html

http://www.phreedom.org/software/onesixtyone/

6.3.5 SMTP Enumeration

6.3.4 SMB Enumeration

https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh831795(v=ws.11)
	This link talks about SMB 3.0 specifically

	The Server Message Block (SMB) protocol is a network file sharing protocol.

	Allows applications on a computer to read and write to files and to request services from server programs in a computer network
	! MSQ SQL databases can be stored SMB Shares
	! File shares can be managed by an admin via powershell
	! Encryption does not always encrypt entire server... indivudual shares can be encrypted whiles others are not...

http://markgamache.blogspot.ca/2013/01/ntlm-challenge-response-is-100-broken.html
	This is an article from 2013. Unsure of how relevant it is even though it says it is still relevant
	4 ways NTLM authenticates. LM, NTLM, NTLM with Session Security, NLTMv2. Its all easy to exploit except for v2
	There are registry options to decide which handshake is used (http://support.microsoft.com/kb/2793313, http://technet.microsoft.com/security/advisory/973811)

	https://www.w3schools.com/browsers/browsers_display.asp -- Statistics for what OS, screen rez, browser Versions, etc are being used.
	I can see this being very useful when creating an application.

	Dove into MD4 a little bit -- Hashes can be cracked in 2^(n/2) bits. 8 character password is 64 bits = 2^32 or 4 million hash cycles to crack

	How ntlm2 is calculated...
	Password gets run through Md4 which spits out a 16 byte value.
	7 null bytes are appended, hash is now 21 bytes.
	Cut this hash into 3 parts. run each of these into 3 des.
	each des key encrypts the type 2 challenge giving 3 eight byte ciphertext values.
	Combine the 3 ciphertexts.

	Notice that bytes 17-21 are Null. So the last Des key is actually only 2 bytes long. Much easier to crack than 7 bytes

	HKLM\SYSTEM\CurrentControlSet\Control\Lsa\LmCompatibilityLevel decides which handshake to use. 3 or greater should be the minimum. 5 is best. (no ntlm, only v2)

	Something else that I learned while diving into MD4... The attacks used on the algorithm were reported 10-15 years prior and no one implemented mitigations...

	Many browsers use NTLM authentication in HTTP headers when a trusted site requests it. (how is "trusted determined? same domain? Certs? I have seen this term in AD documentation)

	ntlm2 and ntlmv2 are not the same. Ntlm2 uses des, ntlmv2 uses hmac

https://www.techtarget.com/searchnetworking/definition/NetBIOS
	Netbios: network service that enables applications on different computers to communicate with each other across a local area network (LAN)

	Has 2 communication modes:
	Session mode aka connection mode
	Datagram mode aka connectionless mode. can also broadcast to every computer on lan.

	Dns Vs NetBios (NBNS or Net Bios Name Server)
	Both NetBIOS and the domain name system (DNS) use naming processes. (aka ip into something readable)
	DNS uses a hierarchical naming structure while the NetBIOS structure is flat.

https://www.pcmag.com/encyclopedia/term/netbios-over-tcpip
	Net bios names are up to 15 characters

6.3.4 Port Scanning with Nmap
http://nmap.org/ -- just a link to nmap site

https://networkprogrammingnotes.blogspot.com/p/berkeley-sockets.html

	API for internet sockets and unix domnain sockets used in IPC
	blocking sockets do not return control until data has been sent or received
	alot of information on how to programatically create a connection... maybe be useful to create learning apps but not immediately helpful.
	Something to keep note of when reviewing POCS,  maybe some of them will use this API...

 
http://man7.org/linux/man-pages/man7/raw.7.html

	Man page for raw sockets. hard read.

http://netfilter.org/projects/iptables/index.html

               - Program to configure packet filtering ruleset
               - NAT is also configured from packet filter ruleset
               - Linux 2.4 and later

 

https://tools.kali.org/information-gathering/masscan
	how to use massscan

 

https://rustscan.github.io/RustScan/
	Scanner faster than NMAP that allows scripting via python, lua, etc

 

https://nmap.org/book/scan-methods-connect-scan.html
	TCP scan and FTP bounce scan are the only scans usuable without root / admin

 

	Attacker -> Sent Syn
	Target -> Respond Syn Ack
	Attacker -> Send ACK
	Host -> Sends banner
	Attacker -> RST

 

	Stealth Scan is
	Attacker -> Syn |----First 2 are same as full connect
	Host -> Syn ACK |
	Attacker -> RST

 

https://nmap.org/book/nmap-services.html

	Explains how nmap determines "common" ports


http://nmap.org/book/nse.html
	An entire tutorial on how to use, and create nmaps scripts
	NSE is a general scripting language

https://nmap.org/book/osdetect.html
	A wealth of documentation on the various versioning information nmap provides and how it does so.
	Mentions that you should use both -sV (port versioning) and -O (os versioning). Things such as proxy firewalls can throw off
	--osscan-limit: This option lets NMAP only do versioning on hosts that have one open and one closed port. This can save time.
	Guesses are much better when there is one open and one closed port.
	--osscan-limit: How many passes should nmap do for Os detection? 5 for "good targets" and 2 for unclear / more guess targets is the default
	Some servers spoof their OS
	Too much information to process but a good start if I ever decide to make a network scanner


https://docs.microsoft.com/en-us/powershell/module/nettcpip/test-netconnection?view=windowsserver2022-ps
	Documentation on how to Test a network connection


https://www.barracuda.com/support/glossary/intrusion-detection-system
	Talks about IDS and also how people try to evade it

http://support.microsoft.com/kb/172983
	TCP 3 way handshake
	This got me thinking about how IPC works and what a pipe is... Unamed pipe just uses Standard input or output to talk to a program. 
	Need 2 pipes for bi-rectional transmission
	Named pipes are essentially treated like files
	There are other ways like a message queue. Basically the operating system handles a queue and the 2 parties interact send messages to the queue, never directly to each other.
	They can also do this via shared memory which seems funky and unreliable. Maybe for lower level processes

	Reminder that the ACK number is the sequence number received + 1 and send back. Kind of like a rolling counter between parties
	Acks are essential in identifying the specific connection they have established

	RFC 793


6.3.2 TCP/UDP Port Scanning Theory
https://www.barracuda.com/support/glossary/intrusion-detection-system
http://support.microsoft.com/kb/172983

[x] 6.2

https://www.megacorpone.com/
https://osintframework.com/ -- Interesting mind map of how to perform OSINT, critical find

https://cheatsheetseries.owasp.org/cheatsheets/Attack_Surface_Analysis_Cheat_Sheet.html
  Attack Surface Analysis --  The point of Attack Surface Analysis is to understand the risk areas in an application, to make developers and security specialists aware of what parts of the application are open to attack, to find ways of minimizing this, and to notice when and how the Attack Surface changes and what this means from a risk perspective.
  Attack Surface Analysis is usually done by security architects and pen testers
     This helps you do the following:
     Identify what needs to be reviewed or tested
     Identify high risk areas that will need defense in depth implemented
     Identify when you have changed the attack surface and need to do a threat assessment
     Attack Surface for an app is basically all of paths for data / commands into and out of and app, valuable data (Secrets, PII, etc), and code that attempts to protect the former
       Should be done for every user type but focus on how the webapp reacts to unauthenticated anonymous users and highly privileged admin users
       Group types of attacks in buckets based on risk
       Dont need to understand every endpoint. Just use the number of endpoints with their buckets to figure out how much of the budget has to go where

    Attack Surface for Microservices and Cloud Native Applicatios (I think these are basically just web apps)
      User interface (UI) forms and fields 
      HTTP headers and cookies
      APIs
      Files
      Databases
      Other local storage
      Email or other kinds of messages
      Runtime arguments
      ...Your points of entry/exit

    Identify high risk code
      Network-facing, especially internet-facing code
      Web forms
      Files from outside of the network
      Backward compatible interfaces with other systems – old protocols, sometimes old code and libraries, hard to maintain and test multiple versions
      Custom APIs – protocols etc – likely to have mistakes in design and implementation
      Security code: anything to do with cryptography, authentication, authorization (access control) and session management

There are tools for vuln scanning webapps (I don't think any of these are allowed on OSCP)
  - OWASP ZAP 
  - Arachni
  - Skipfish
  - w3af

6.2.1 Whois Enumeration

 https://www.domaintools.com/support/what-is-whois-information-and-why-is-it-valuable/
  
  Whois is a widely used Internet record listing that identifies who owns a domain and how to get in contact with them.
  Whois record changes can take a while (About 24 Hours)
  Not all extensions are equal. dot US do not have the option to privatize their information. ICANN no longer posts details of .ca domains. (However companies must still publicize it)
  
   
  
https://www.forbes.com/advisor/business/software/what-is-a-name-server/
  
  Name servers connect specific URLs with the correct internet protocol (IP) address of the site’s server. (It doesn't mention IPv4 or Ipv6 nor which one specifically)
  Imagine that Name servers are the library, and DNS records are the catalog
  Each webhost has a different process for updating DNS records
  Name servers do not have to be related to the domain
  
  Windows
  
  nslookup
  set q = ns
  <Enter a domain>
  
  for Linux/mac use dig

 https://www.cloudflare.com/learning/dns/glossary/what-is-a-domain-name-registrar/

6.2.2
CSP - https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP

	One main objective of CSP is to mitigate and REPORT xss attacks (how does it report the attacks?)

	XSS attacks exploit the browser's trust in the content received from the server. -- This explanation of XSS is the clearest I've read so far

	CSP reduces or eliminate the vectors by which XSS can occur by specifying the domains that the browser should consider to be valid sources of executable scripts.
	A CSP compatible browser will then only execute scripts loaded in source files received from those allowed domains.

	CSP can specify which protocols are allowed -- example only use HTTPs. Combine this with Secure attribute on cookies. Force redirects from http to https

	Strict-Transport-Security header -- sites force browsers to only connect over encrypted channel

	A policy needs to include a default-src or script-src directive to prevent inline scripts from running, as well as blocking the use of eval()

	default-src or style-src helps protect <style> element or style attribute from inline styles

X-Frame Options -- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options

	Whether browsers can render Frame, Iframe, embed or object

	CSP has frame-ancestors directive which obsoletes xframes

	Xframe inside meta tag does not work

Server Hardening -- https://csrc.nist.gov/publications/detail/sp/800-123/final

RC4 - https://msrc.microsoft.com/blog/2013/11/security-advisory-2868725-recommendation-to-disable-rc4/

6.3 Active Information Gathering

https://www.cloudflare.com/learning/dns/what-is-dns/

There are 4 Dns servers involved in loading a webpage
- Recursor
- root nameserver -- one of the big 13
- tld nameserver -- .com, .org, .net
- authoratative nameserver -- gives the actual answer

Recursors recieve queries from client machines. This can be via web browser. May make multiple requests to get an answer
Root nameserver -- There are 13 ips associated with root servers

6.3.1

https://github.com/danielmiessler/SecLists -- wordlists

https://www.cloudflare.com/learning/dns/dns-records/dns-ptr-record/

https://www.cloudflare.com/learning/dns/glossary/reverse-dns/

Tool: https://github.com/darkoperator/dnsrecon





